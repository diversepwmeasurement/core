env:
  BRANCHING_MODEL: trunk-based
jobs:
  publish-release-image:
    if: success()
    name: Publish release image
    needs: release-process
    outputs:
      formatted_tags: ${{ steps.discover-docker-tags.outputs.formatted_tags }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      name: Set Common Vars
      run: "BUILD_ID=${{ needs.release-process.outputs.build_id }}\nIS_RELEASE=${{\
        \ needs.release-process.outputs.is_release }}\nIS_LTS=${{ needs.release-process.outputs.is_lts\
        \ }}\n\nPLATFORMS=linux/amd64\nif [[ ${BUILD_ID} =~ ^release-[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$|^v[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$\
        \ ]]; then\n  PLATFORMS=\"${PLATFORMS},linux/arm64\"\nfi\n\nif [[ \"${IS_RELEASE}\"\
        \ == 'true' && \"${IS_LTS}\" != 'true' ]]; then\n  ALSO_LATEST=true\nelse\n\
        \  ALSO_LATEST=false\nfi\n\necho \"ALSO_LATEST=${ALSO_LATEST}\" >> $GITHUB_ENV\n\
        echo \"PLATFORMS=${PLATFORMS}\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      id: discover-docker-tags
      name: Discover docker tags
      uses: dotcms/discover-docker-tags-action@v2.0
      with:
        also_latest: ${{ env.ALSO_LATEST }}
        hash: ${{ needs.release-process.outputs.build_hash }}
        image_name: dotcms/dotcms
        label: ${{ needs.release-process.outputs.release_label }}
        update_stable: ${{ needs.release-process.outputs.is_release }}
        version: ${{ needs.release-process.outputs.release_version }}
    - continue-on-error: true
      if: needs.release-process.outputs.is_release == 'true'
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0
      with:
        platforms: amd64,arm64
    - continue-on-error: true
      if: needs.release-process.outputs.is_release == 'true'
      name: Docker setup buildx
      uses: docker/setup-buildx-action@v3.0.0
      with:
        driver-opts: 'image=moby/buildkit:v0.12.2

          '
        platforms: ${{ env.PLATFORMS }}
    - continue-on-error: true
      if: needs.release-process.outputs.is_release == 'true'
      name: Docker Hub login
      uses: docker/login-action@v3.0.0
      with:
        password: ${{ secrets.DOCKER_TOKEN }}
        username: ${{ secrets.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Pre build
      run: 'docker system prune --volumes -af

        '
    - continue-on-error: true
      if: success()
      name: Build and push
      uses: docker/build-push-action@v5.0.0
      with:
        build-args: 'BUILD_FROM=TAG

          BUILD_ID=${{ needs.release-process.outputs.build_id }}

          '
        context: ./docker/dotcms
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: ${{ steps.discover-docker-tags.outputs.discovered_tags }}
  release-process:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOT_CICD_BRANCH: master
      GITHUB_USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_VERSION: 16
      REPO_PASSWORD: ${{ secrets.EE_REPO_PASSWORD }}
      REPO_USERNAME: ${{ secrets.EE_REPO_USERNAME }}
    if: ${{ !startsWith(github.event.release.name, 'dotcms-cli') }}
    name: Release process automation
    outputs:
      build_hash: ${{ steps.set-common-vars.outputs.build_hash }}
      build_id: ${{ steps.set-common-vars.outputs.build_id }}
      is_lts: ${{ steps.set-common-vars.outputs.is_lts }}
      is_release: ${{ steps.set-common-vars.outputs.is_release }}
      release_label: ${{ steps.set-common-vars.outputs.release_label }}
      release_version: ${{ steps.set-common-vars.outputs.release_version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      id: set-common-vars
      name: Set Common Vars
      run: "BUILD_ID=$(basename \"${{ github.ref }}\")\n\nif [[ \"${BRANCHING_MODEL}\"\
        \ == 'trunk-based' ]]; then\n  BUILD_HASH=${GITHUB_SHA::7}\n  RELEASE_VERSION=${{\
        \ github.event.release.tag_name }}\nelse\n  BUILD_HASH=$(git log -1 --pretty=%h)\n\
        \  BUILD_HASH=${BUILD_HASH::7}\n  eval $(cat dotCMS/gradle.properties| grep\
        \ dotcmsReleaseVersion)\n  RELEASE_VERSION=\"${dotcmsReleaseVersion}\"\nfi\n\
        \nif [[ ${BUILD_ID} =~ ^release-[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$|^v[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$\
        \ ]]; then\n  IS_RELEASE=true\nelse\n  IS_RELEASE=false\nfi\n\nRELEASE_NAME=\"\
        ${{ github.event.release.name }}\"\nif [[ -n \"${RELEASE_NAME}\" && \"${RELEASE_NAME^^}\"\
        \ =~ [[:blank:]].?LTS$ ]]; then\n  IS_LTS=true\n  RELEASE_LABEL=lts\nfi\n\n\
        echo \"BUILD_ID=${BUILD_ID}\" >> $GITHUB_ENV\necho \"build_id=${BUILD_ID}\"\
        \ >> $GITHUB_OUTPUT\necho \"BUILD_HASH=${BUILD_HASH}\" >> $GITHUB_ENV\necho\
        \ \"build_hash=${BUILD_HASH}\" >> $GITHUB_OUTPUT\necho \"RELEASE_VERSION=${RELEASE_VERSION}\"\
        \ >> $GITHUB_ENV\necho \"release_version=${RELEASE_VERSION}\" >> $GITHUB_OUTPUT\n\
        echo \"IS_RELEASE=${IS_RELEASE}\" >> $GITHUB_ENV\necho \"is_release=${IS_RELEASE}\"\
        \ >> $GITHUB_OUTPUT\necho \"IS_LTS=${IS_LTS}\" >> $GITHUB_ENV\necho \"is_lts=${IS_LTS}\"\
        \ >> $GITHUB_OUTPUT\necho \"release_name=${RELEASE_NAME}\" >> $GITHUB_OUTPUT\n\
        echo \"release_label=${RELEASE_LABEL}\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      name: Prepare dot-cicd
      run: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"

        '
    - continue-on-error: true
      name: Run DotCMS Release Docker Image
      run: '../dotcicd/library/pipeline.sh runRelease

        '
  release-wrap:
    env:
      FETCH_VALUE: Next Release
    if: success()
    name: Release wrap-up
    needs:
    - release-process
    - publish-release-image
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      id: fetch-next-release-issues
      name: Fetch `Next Release` issues
      uses: ./.github/actions/issue-fetcher
      with:
        fetch_operation: WITH_LABELS
        fetch_value: ${{ env.FETCH_VALUE }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      name: Clear next release issues
      uses: ./.github/actions/issue-labeler
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        issues_json: ${{ steps.fetch-next-release-issues.outputs.issues }}
        labels: ${{ env.FETCH_VALUE }}
        operation: REMOVE
    - continue-on-error: true
      name: Label current release issues
      uses: ./.github/actions/issue-labeler
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        issues_json: ${{ steps.fetch-next-release-issues.outputs.issues }}
        labels: Release ${{ needs.release-process.outputs.release_version }}
        operation: ADD
    - continue-on-error: true
      env:
        MSG_MINIMAL: true
        SLACK_FOOTER: ''
        SLACK_ICON: https://avatars.slack-edge.com/temp/2021-12-08/2830145934625_e4e464d502865ff576e4.png
        SLACK_MESSAGE: '<!channel> This automated script is excited to announce the
          release of a new version of dotCMS `${{ needs.release-process.outputs.build_id
          }}` :rocket:

          :docker: Produced images: [${{ needs.publish-release-image.outputs.formatted_tags
          }}]'
        SLACK_MSG_AUTHOR: ' '
        SLACK_TITLE: Important news!
        SLACK_USERNAME: dotBot
        SLACK_WEBHOOK: ${{ secrets.RELEASE_SLACK_WEBHOOK }}
      if: success() && needs.release-process.outputs.is_release == 'true'
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
name: Release Process
on:
  repository_dispatch:
    types: trigger-ga___release-process.yml
