env:
  DOCKER_BUILD_CONTEXT: /home/runner/work/_temp/core-build
  JAVA_DISTRO: temurin
  JAVA_VERSION: 11
  JVM_TEST_MAVEN_OPTS: -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
jobs:
  build-push-image:
    name: Build/Push Image
    needs: prepare-release
    secrets:
      docker_io_token: ${{ secrets.DOCKER_TOKEN }}
      docker_io_username: ${{ secrets.DOCKER_USERNAME }}
    uses: ./.github/workflows/maven-build-docker-image.yml
    with:
      docker_context_cache_key: docker-context-${{ needs.prepare-release.outputs.date
        }}-${{ github.run_id }}
      docker_platforms: linux/amd64,linux/arm64
      ref: ${{ needs.prepare-release.outputs.release_tag }}
  finish-release:
    env:
      FETCH_VALUE: Next Release
      NEXT_VERSION: 1.0.0-SNAPSHOT
    if: success()
    name: Finish Release
    needs:
    - prepare-release
    - release-process
    - build-push-image
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
      with:
        ref: master
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      env:
        MSG_MINIMAL: true
        SLACK_FOOTER: ''
        SLACK_ICON: https://avatars.slack-edge.com/temp/2021-12-08/2830145934625_e4e464d502865ff576e4.png
        SLACK_MESSAGE: '<!channel> This automated script is excited to announce the
          release of a new version of dotCMS `${{ needs.prepare-release.outputs.release_version
          }}` :rocket:

          :docker: Produced images: [${{ needs.build-push-image.outputs.formatted_tags
          }}]'
        SLACK_MSG_AUTHOR: ' '
        SLACK_TITLE: Important news!
        SLACK_USERNAME: dotBot
        SLACK_WEBHOOK: ${{ secrets.RELEASE_SLACK_WEBHOOK }}
      if: success() && github.event.inputs.notify_slack == 'true'
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
  prepare-release:
    name: Prepare Release
    outputs:
      date: ${{ steps.set-common-vars.outputs.date }}
      release_tag: ${{ steps.set-common-vars.outputs.release_tag }}
      release_version: ${{ steps.set-common-vars.outputs.release_version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Validate Inputs
      run: "if [[ ! ${{ github.event.inputs.release_version }} =~ ^[0-9]{2}.[0-9]{2}.[0-9]{2}(_lts_v[0-9]{2})?$\
        \ ]]; then\n  echo 'Release version must be in the format yy.mm.dd or yy.mm.dd_lts_v##'\n\
        \  exit 1\nfi\n"
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo 'GitHub context'
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.CI_MACHINE_TOKEN }}
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      id: set-common-vars
      name: Set Common Vars
      run: "git config user.name \"${{ secrets.CI_MACHINE_USER }}\"\ngit config user.email\
        \ \"dotCMS-Machine-User@dotcms.com\"\n\nrelease_version=${{ github.event.inputs.release_version\
        \ }}\nrelease_branch=release-${release_version}\nrelease_tag=v${release_version}\n\
        release_commit=${{ github.event.inputs.release_commit }}\nif [[ -z \"${release_commit}\"\
        \ ]]; then\n  release_commit=$(git log -1 --pretty=%H)\nfi\nrelease_hash=${release_commit::7}\n\
        is_lts=false\n[[ ${release_version} =~ ^[0-9]{2}.[0-9]{2}.[0-9]{2}_lts_v[0-9]{2}$\
        \ ]] && is_lts=true\n\necho \"release_version=${release_version}\" >> $GITHUB_OUTPUT\n\
        echo \"release_branch=${release_branch}\" >> $GITHUB_OUTPUT\necho \"release_tag=${release_tag}\"\
        \ >> $GITHUB_OUTPUT\necho \"release_commit=${release_commit}\" >> $GITHUB_OUTPUT\n\
        echo \"release_hash=${release_hash}\" >> $GITHUB_OUTPUT\necho \"is_lts=${is_lts}\"\
        \ >> $GITHUB_OUTPUT\necho \"date=$(/bin/date -u \"+%Y-%m\")\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      id: set-release-version
      name: Set Release Version
      run: "release_tag=${{ steps.set-common-vars.outputs.release_tag }}\nif git rev-parse\
        \ \"${release_tag}\" >/dev/null 2>&1; then \n  echo \"Tag ${release_tag} exists,\
        \ removing it\"\n  git push origin :refs/tags/${release_tag}\nfi\n\ngit reset\
        \ --hard ${{ steps.set-common-vars.outputs.release_commit }}\nrelease_version=${{\
        \ steps.set-common-vars.outputs.release_version }}\nrelease_branch=${{ steps.set-common-vars.outputs.release_branch\
        \ }}\n\nremote=$(git ls-remote --heads https://github.com/dotCMS/core.git\
        \ ${release_branch} | wc -l | tr -d '[:space:]')\nif [[ \"${remote}\" == '1'\
        \ ]]; then\n  echo \"Release branch ${release_branch} already exists, removing\
        \ it\"\n  git push origin :${release_branch}\nfi\ngit checkout -b ${release_branch}\n\
        \n./mvnw -ntp \\\n  ${JVM_TEST_MAVEN_OPTS} \\\n  versions:set \\\n  versions:commit\
        \ \\\n  -DnewVersion=${release_version} \\\n  -DprocessAllModules=true\n\n\
        ./mvnw -ntp \\\n  ${JVM_TEST_MAVEN_OPTS} \\\n  versions:set-property \\\n\
        \  versions:commit \\\n  -Dproperty=tika.api.version \\\n  -DnewVersion=${release_version}\
        \ \\\n  --file independent-projects/pom.xml\n\ngit status\ngit commit -a -m\
        \ \"\U0001F3C1 Publishing release version [${release_version}]\"\ngit push\
        \ origin ${release_branch}\n\nrelease_commit=$(git log -1 --pretty=%H)\necho\
        \ \"release_commit=${release_commit}\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: ${{ env.JAVA_DISTRO }}
        java-version: ${{ env.JAVA_VERSION }}
    - continue-on-error: true
      name: Build Core
      run: "mkdir -p ${DOCKER_BUILD_CONTEXT}\n./mvnw -ntp \\\n  ${JVM_TEST_MAVEN_OPTS}\
        \ \\\n  -Dprod=true \\\n  -Ddocker.buildArchiveOnly=${DOCKER_BUILD_CONTEXT}\
        \ \\\n  -DskipTests=true \\\n  -DskipITs=true \\\n  clean install \\\n  --file\
        \ pom.xml \\\n  --show-version\nrc=$?\nif [[ $rc != 0 ]]; then\n  echo \"\
        Build failed with exit code $rc\"\n  exit $rc\nfi\n"
    - continue-on-error: true
      id: setup-docker-context
      if: success()
      name: Setup Context
      run: 'mkdir -p ${DOCKER_BUILD_CONTEXT}/context

        tar -xvf ${DOCKER_BUILD_CONTEXT}/docker-build.tar -C ${DOCKER_BUILD_CONTEXT}/context

        '
    - continue-on-error: true
      id: cache-maven
      if: success()
      name: Cache Maven Repository
      uses: actions/cache@v3
      with:
        key: maven-core-${{ steps.set-common-vars.outputs.date }}-${{ github.run_id
          }}
        path: ~/.m2/repository
        restore-keys: 'maven-core-${{ steps.set-common-vars.outputs.date }}

          '
    - continue-on-error: true
      id: cache-core-output
      if: success()
      name: Cache Core Output
      uses: actions/cache@v3
      with:
        key: maven-core-output-${{ steps.set-common-vars.outputs.date }}-${{ github.run_id
          }}
        path: './dotCMS/target/classes

          ./dotCMS/target/generated-sources

          ./dotCMS/target/dotcms-core-${{ steps.set-common-vars.outputs.release_version
          }}.zip

          '
        restore-keys: 'maven-core-output-${{ steps.set-common-vars.outputs.date }}

          '
    - continue-on-error: true
      id: cache-node-binary
      if: success()
      name: Cache Node Binary
      uses: actions/cache@v3
      with:
        key: node-binary-${{ hashFiles('core-web/.nvmrc') }}
        path: 'core-web/installs

          '
    - continue-on-error: true
      id: cache-npm
      if: success()
      name: Cache NPM
      uses: actions/cache@v3
      with:
        key: npm-${{ hashFiles('core-web/package-lock.json') }}
        path: '~/.npm

          '
        restore-keys: npm-
    - continue-on-error: true
      id: cache-docker-context
      if: success()
      name: Cache Docker Context
      uses: actions/cache@v3
      with:
        key: docker-context-${{ steps.set-common-vars.outputs.date }}-${{ github.run_id
          }}
        path: ${{ env.DOCKER_BUILD_CONTEXT }}/context
        restore-keys: 'docker-context-${{ steps.set-common-vars.outputs.date }}

          '
    - continue-on-error: true
      if: success()
      name: Create Release
      run: "curl -X POST \\\n  -H \"Accept: application/vnd.github+json\" \\\n  -H\
        \ \"X-GitHub-Api-Version: 2022-11-28\" \\\n  -H \"Authorization: Bearer ${{\
        \ secrets.CI_MACHINE_TOKEN }}\" \\\n  https://api.github.com/repos/dotCMS/core/releases\
        \ \\\n  -d '{\"tag_name\": \"${{ steps.set-common-vars.outputs.release_tag\
        \ }}\", \"name\": \"Release ${{ steps.set-common-vars.outputs.release_version\
        \ }}\", \"target_commitish\": \"${{ steps.set-release-version.outputs.release_commit\
        \ }}\", \"draft\": false, \"prerelease\": false, \"generate_release_notes\"\
        : false}'\n"
  release-process:
    env:
      AWS_REGION: us-east-1
    if: success()
    name: Release Process
    needs: prepare-release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout core
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.prepare-release.outputs.release_tag }}
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      id: restore-maven
      name: Restore Maven Repository
      uses: actions/cache/restore@v3
      with:
        key: maven-core-${{ needs.prepare-release.outputs.date }}-${{ github.run_id
          }}
        path: ~/.m2/repository
    - continue-on-error: true
      id: restore-core-output
      name: Restore Core Output
      uses: actions/cache/restore@v3
      with:
        key: maven-core-output-${{ needs.prepare-release.outputs.date }}-${{ github.run_id
          }}
        path: './dotCMS/target/classes

          ./dotCMS/target/generated-sources

          ./dotCMS/target/dotcms-core-${{ needs.prepare-release.outputs.release_version
          }}.zip

          '
    - continue-on-error: true
      id: restore-node-binary
      name: Restore Node Binary
      uses: actions/cache/restore@v3
      with:
        key: node-binary-${{ hashFiles('core-web/.nvmrc') }}
        path: core-web/installs
    - continue-on-error: true
      id: restore-npm
      name: Restore NPM
      uses: actions/cache/restore@v3
      with:
        key: npm-${{ hashFiles('core-web/package-lock.json') }}
        path: ~/.npm
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: ${{ env.JAVA_DISTRO }}
        java-version: ${{ env.JAVA_VERSION }}
    - continue-on-error: true
      name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: '[{ "id": "dotcms-libs", "name": "DotCMS libs Release", "url":
          "https://repo.dotcms.com/artifactory/libs-release" }]'
        servers: '[{ "id": "dotcms-libs", "username": "${{ secrets.EE_REPO_USERNAME
          }}", "password": "${{ secrets.EE_REPO_PASSWORD }}" }]'
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      if: github.event.inputs.deploy_artifact == 'true'
      name: Deploy Release
      run: "./mvnw -ntp \\\n  ${JVM_TEST_MAVEN_OPTS} \\\n  -Dprod=true \\\n  -DskipTests=true\
        \ \\\n  -DskipITs=true \\\n  deploy \\\n  --file dotCMS/pom.xml\n"
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.event.inputs.upload_javadocs == 'true'
      name: Generate/Push Javadoc
      run: "./mvnw -ntp \\\n  ${JVM_TEST_MAVEN_OPTS} \\\n  javadoc:javadoc \\\n  --file\
        \ dotCMS/pom.xml\nrc=$?\nif [[ $rc != 0 ]]; then\n  echo \"Javadoc generation\
        \ failed with exit code $rc\"\n  exit $rc\nfi\n\nsite_dir=./dotCMS/target/site\n\
        javadoc_dir=${site_dir}/javadocs\ns3_uri=s3://static.dotcms.com/docs/${{ needs.prepare-release.outputs.release_version\
        \ }}/javadocs\n\nmv ${site_dir}/apidocs ${javadoc_dir}\necho \"Running: aws\
        \ s3 cp ${javadoc_dir} ${s3_uri} --recursive\"\naws s3 cp ${javadoc_dir} ${s3_uri}\
        \ --recursive\n"
    - continue-on-error: true
      if: github.event.inputs.update_plugins == 'true'
      name: Update Plugins
      run: "release_version=${{ needs.prepare-release.outputs.release_version }}\n\
        curl -L \\\n  -X POST \\\n  -H \"Accept: application/vnd.github+json\" \\\n\
        \  -H \"Authorization: Bearer ${{ secrets.CI_MACHINE_TOKEN }}\" \\\n  -H \"\
        X-GitHub-Api-Version: 2022-11-28\" \\\n  https://api.github.com/repos/dotCMS/plugin-seeds/dispatches\
        \ \\\n  -d \"{\\\"event_type\\\": \\\"on-plugins-release\\\", \\\"client_payload\\\
        \": {\\\"release_version\\\": \\\"$release_version\\\"}}\"\n"
name: Maven Release Process
on:
  repository_dispatch:
    types: trigger-ga___maven-release-process.yml
