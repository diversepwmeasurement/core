jobs:
  build_push_image:
    name: Build/Push Image
    needs: release-candidate-process
    secrets:
      docker_io_token: ${{ secrets.DOCKER_TOKEN }}
      docker_io_username: ${{ secrets.DOCKER_USERNAME }}
      ghcr_io_token: ${{ secrets.GHCR_TOKEN }}
      ghcr_io_username: ${{ secrets.DOCKER_USERNAME }}
    uses: ./.github/workflows/maven-build-docker-image.yml
    with:
      docker_platforms: linux/amd64,linux/arm64
      ref: ${{ needs.release-candidate-process.outputs.ref }}
  notification:
    name: Release process automation
    needs:
    - release-candidate-process
    - build_push_image
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        MSG_MINIMAL: true
        SLACK_FOOTER: ''
        SLACK_ICON: https://avatars.githubusercontent.com/u/1005263?s=200&v=4
        SLACK_MESSAGE: '<!channel> A release candidate has been successfully created
          :hatching_chick: with tags: [${{ needs.build_push_image.outputs.tags }}]
          :docker:'
        SLACK_MSG_AUTHOR: ' '
        SLACK_TITLE: 'Attention dotters: New pre-release created!'
        SLACK_USERNAME: dotBot
        SLACK_WEBHOOK: ${{ secrets.CODE_FREEZE_SLACK_WEBHOOK }}
      if: success()
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
  release-candidate-process:
    name: Release process automation
    outputs:
      ref: ${{ steps.set-common-vars.outputs.ref }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "Github Context:"
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref_name }}
    - continue-on-error: true
      uses: ./.github/actions/cleanup-runner
    - continue-on-error: true
      id: changelog
      name: Generate changelog
      uses: ./.github/actions/rc-changelog
      with:
        branch: ${{ github.ref_name }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        initial_sha: ${{ github.event.inputs.initial_sha }}
        last_sha: ${{ github.event.inputs.last_sha }}
    - continue-on-error: true
      if: github.event.inputs.label_operation != 'None'
      name: Label issues
      uses: ./.github/actions/issue-labeler
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        issues_json: ${{ steps.changelog.outputs.issues_flat }}
        labels: ${{ github.event.inputs.labels }}
        operation: ${{ github.event.inputs.label_operation }}
    - continue-on-error: true
      env:
        RELEASE_CANDIDATE_TAG: ${{ github.event.inputs.tag_name }}
      if: env.RELEASE_CANDIDATE_TAG != ''
      name: Create RC tag
      run: "git fetch --tags\ngit reset --hard ${{ github.event.inputs.last_sha }}\n\
        if git show-ref --tags \"${RELEASE_CANDIDATE_TAG}\" --quiet; then\n  git tag\
        \ -d ${RELEASE_CANDIDATE_TAG}\n  git push origin :refs/tags/${RELEASE_CANDIDATE_TAG}\n\
        fi\n\ngit config user.name \"${{ secrets.CI_MACHINE_USER }}\"\ngit config\
        \ user.email \"dotCMS-Machine-User@dotcms.com\"\n\ngit tag -a ${RELEASE_CANDIDATE_TAG}\
        \ -m 'Release candidate tag'\ngit push origin \"${RELEASE_CANDIDATE_TAG}\"\
        \n"
    - continue-on-error: true
      name: Changelog report
      uses: ./.github/actions/changelog-report
      with:
        format: md
        issues_json: ${{ steps.changelog.outputs.issues_json }}
        tag: ${{ github.event.inputs.tag_name }}
    - continue-on-error: true
      id: set-common-vars
      name: Set Common Vars
      run: 'echo "ref=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT

        '
name: Release Candidate Process
on:
  repository_dispatch:
    types: trigger-ga___release-candidate.yml
