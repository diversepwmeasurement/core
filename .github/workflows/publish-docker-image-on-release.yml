jobs:
  build-push-image:
    name: Build/Push Image
    needs: prepare-build
    secrets:
      docker_io_token: ${{ secrets.DOCKER_TOKEN }}
      docker_io_username: ${{ secrets.DOCKER_USERNAME }}
      ghcr_io_token: ${{ secrets.GHCR_TOKEN }}
      ghcr_io_username: ${{ secrets.DOCKER_USERNAME }}
    uses: ./.github/workflows/maven-build-docker-image.yml
    with:
      docker_platforms: linux/amd64,linux/arm64
      force_snapshot: true
      ref: ${{ needs.prepare-build.outputs.build_id }}
  finish-build-push:
    name: Finish Build/Push
    needs: build-push-image
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        MSG_MINIMAL: true
        SLACK_FOOTER: ''
        SLACK_ICON: https://avatars.githubusercontent.com/u/1005263?s=200&v=4
        SLACK_MESSAGE: '<!channel> This automated script is happy to announce that
          a new docker image has been built for *${{ needs.build-push-image.outputs.version
          }}* with tags: [${{ needs.build-push-image.outputs.tags }}] :docker:'
        SLACK_MSG_AUTHOR: ' '
        SLACK_TITLE: 'Attention dotters: Docker image built!'
        SLACK_USERNAME: dotBot
        SLACK_WEBHOOK: ${{ secrets.DEVELOPERS_SLACK_WEBHOOK }}
      if: success()
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
  prepare-build:
    name: Prepare build
    outputs:
      build_id: ${{ steps.process-params.outputs.build_id }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo 'GitHub context'
    - continue-on-error: true
      id: process-params
      name: Process Params
      run: "if [[ \"${{ github.event_name }}\" == 'repository_dispatch' ]]; then\n\
        \  build_id=${{ github.event.client_payload.build_id }}\nelse\n  build_id=$(basename\
        \ \"${{ github.ref }}\")\nfi\n\nif [[ -z \"${build_id}\" ]]; then\n  echo\
        \ 'Could not resolve build_id, aborting'\n  exit 1\nelse\n  echo \"Found build_id:\
        \ ${build_id}\"\nfi\n\necho \"build_id=${build_id}\" >> $GITHUB_OUTPUT\n"
name: Build/Push dotCMS docker image (on release)
on:
  repository_dispatch:
    types: trigger-ga___publish-docker-image-on-release.yml
