jobs:
  report:
    if: github.event.workflow_run.conclusion != 'skipped'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      name: Log GitHub context
      run: echo "$GITHUB_CONTEXT"
    - continue-on-error: true
      id: data-download
      name: Download Workflow Data
      uses: dawidd6/action-download-artifact@v2
      with:
        if_no_artifact_found: warn
        name: workflow-data
        run_id: ${{ github.event.workflow_run.id }}
        workflow: ${{ github.event.workflow.id }}
    - continue-on-error: true
      id: test-reporter
      if: steps.data-download.outputs.found_artifact == 'true'
      uses: dorny/test-reporter@v1
      with:
        artifact: /^build-reports-test-(.*)/
        fail-on-error: true
        list-tests: failed
        name: MVN Test Report $1
        path: '**/target/**/TEST-*.xml'
        reporter: java-junit
    - continue-on-error: true
      id: workflow-data
      name: Get Workflow Data
      run: "if [[ ! -e \"workflow-data.json\" ]]\nthen\n  echo \"::warn title=Artifact\
        \ 'workflow-data' missing::Expected artifact 'workflow-data' does not exist\
        \ for pull_request event.\"\nelse\n  json=$(jq -c '.' workflow-data.json)\n\
        \  trigger_event_name=$(echo $json | jq -r '.trigger_event_name // \"null\"\
        ')\n  status=$(echo $json | jq -r '.aggregate_status // \"null\"')\n  pr_number=$(echo\
        \ $json | jq -r '.pr_number // \"null\"')\n  pr_author=$(echo $json | jq -r\
        \ '.pr_author // \"null\"')\n  run_id=$(echo $json | jq -r '.run_id // \"\
        null\"')\n  first_fail_step=$(echo $json | jq -r '.first_fail_step // \"None\"\
        ')\n  first_fail_module=$(echo $json | jq -r '.first_fail_module // \"None\"\
        ')\n  first_fail_error=$(echo $json | jq -r '.first_fail_error // \"None\"\
        ')\n  pr_title=$(echo $json | jq -r '.pr_title // \"null\"')\n  branch=$(echo\
        \ $json | jq -r '.branch // \"null\"')\n  head_sha=$(echo $json | jq -r '.head_sha\
        \ // \"null\"')\n  head_author=$(echo $json | jq -r '.head_author // \"null\"\
        ')\n  head_name=$(echo $json | jq -r '.head_name // \"null\"')\n  source_repository=$(echo\
        \ $json | jq -r '.source_repository // \"null\"')\n  action_run_url=\"https://github.com/$source_repository/actions/runs/$run_id\"\
        \n  pr_number_url=\"https://github.com/$source_repository/pull/$pr_number\"\
        \n  branch_url=\"https://github.com/$source_repository/tree/$branch\"\n  commit_id_url=\"\
        https://github.com/$source_repository/pull/$pr_number/commits/$head_sha\"\n\
        \  test_results_url=\"https://github.com/$source_repository/pull/${pr_number}/checks\"\
        \n  if [[ -z \"${{ steps.test-reporter.outputs.conclusion }}\" ]]; then\n\
        \    test_conclusion=\"Not Run\"\n    test_passed=0\n    test_failed=0\n \
        \   test_skipped=9\n    test_elapsed=0\n  else\n    test_conclusion=${{ steps.test-reporter.outputs.conclusion\
        \ }}\n    test_passed=${{ steps.test-reporter.outputs.passed }}\n    test_failed=${{\
        \ steps.test-reporter.outputs.failed }}\n    test_skipped=${{ steps.test-reporter.outputs.skipped\
        \ }}\n    test_elapsed=${{ steps.test-reporter.outputs.time }}\n  fi\n  \n\
        \  \n  if [[ \"$status\" == \"SUCCESS\" ]]; then\n    echo \"status_icon=\u2705\
        \" >> $GITHUB_OUTPUT\n  else\n    echo \"status_icon=\u274C\" >> $GITHUB_OUTPUT\n\
        \  fi\n\n  if [[ \"$trigger_event_name\" == \"pull_request\" ]]; then\n  \
        \  echo \"report_type=PR\" >> $GITHUB_OUTPUT\n  elif [[ \"$trigger_event_name\"\
        \ == \"merge_group\" ]]; then\n    echo \"report_type=Merge Queue\" >> $GITHUB_OUTPUT\n\
        \  elif [[ \"$trigger_event_name\" == \"push\" ]]; then\n    echo \"report_type=Branch\
        \ Merge\" >> $GITHUB_OUTPUT\n  else \n     echo \"report_type=$trigger_event_name\"\
        \ >> $GITHUB_OUTPUT\n  fi\n  \n\n  echo \"json=$json\" >> $GITHUB_OUTPUT\n\
        \  echo \"trigger_event_name=$trigger_event_name\" >> $GITHUB_OUTPUT\n  echo\
        \ \"has-json=true\" >> $GITHUB_OUTPUT\n  echo \"status=$status\" >> $GITHUB_OUTPUT\n\
        \  echo \"pr_number=$pr_number\" >> $GITHUB_OUTPUT\n  echo \"pr_author=$pr_author\"\
        \ >> $GITHUB_OUTPUT\n  echo \"run_id=$run_id\" >> $GITHUB_OUTPUT\n  echo \"\
        first_fail_step=$first_fail_step\" >> $GITHUB_OUTPUT\n  echo \"first_fail_module=$first_fail_module\"\
        \ >> $GITHUB_OUTPUT\n  echo \"first_fail_error=$first_fail_error\" >> $GITHUB_OUTPUT\n\
        \  echo \"pr_title=$pr_title\" >> $GITHUB_OUTPUT\n  echo \"branch=$branch\"\
        \ >> $GITHUB_OUTPUT\n  echo \"head_sha=$head_sha\" >> $GITHUB_OUTPUT\n  echo\
        \ \"head_author=$head_author\" >> $GITHUB_OUTPUT\n  echo \"head_name=$head_name\"\
        \ >> $GITHUB_OUTPUT\n  echo \"source_repository=$source_repository\" >> $GITHUB_OUTPUT\n\
        \  echo \"action_run_url=$action_run_url\" >> $GITHUB_OUTPUT\n  echo \"pr_number_url=$pr_number_url\"\
        \ >> $GITHUB_OUTPUT\n  echo \"branch_url=$branch_url\" >> $GITHUB_OUTPUT\n\
        \  echo \"commit_id_url=$commit_id_url\" >> $GITHUB_OUTPUT\n  echo \"test_results_url=$test_results_url\"\
        \ >> $GITHUB_OUTPUT\n  echo \"test_conclusion=$test_conclusion\" >> $GITHUB_OUTPUT\n\
        \  echo \"test_passed=$test_passed\" >> $GITHUB_OUTPUT\n  echo \"test_failed=$test_failed\"\
        \ >> $GITHUB_OUTPUT\n  echo \"test_skipped=$test_skipped\" >> $GITHUB_OUTPUT\n\
        \  echo \"test_elapsed=$test_elapsed\" >> $GITHUB_OUTPUT\n\nfi\n"
    - continue-on-error: true
      id: prepare-slack-message
      name: Prepare Slack Message Payload
      run: "payload=$(cat <<EOF\n{\n    \"text\": \"Github Action ${{ steps.workflow-data.outputs.status\
        \ }} for ${{ steps.workflow-data.outputs.report_type }} #${{ steps.workflow-data.outputs.pr_number\
        \ || steps.workflow-data.outputs.branch }}\",\n    \"blocks\": [\n      {\n\
        \        \"type\": \"header\",\n        \"text\": {\n          \"type\": \"\
        plain_text\",\n          \"text\": \"${{ steps.workflow-data.outputs.status_icon\
        \ }} Github Action ${{ steps.workflow-data.outputs.status }} for ${{ steps.workflow-data.outputs.report_type\
        \ }} #${{ steps.workflow-data.outputs.pr_number || steps.workflow-data.outputs.branch\
        \ }}\",\n          \"emoji\": true\n        }\n      },\n      {\n       \
        \ \"type\": \"section\",\n        \"text\": {\n          \"type\": \"mrkdwn\"\
        ,\n          \"text\": \"*Action Run ID:* <${{ steps.workflow-data.outputs.action_run_url\
        \ }} | ${{ steps.workflow-data.outputs.run_id }}> \\n*Failure Step:* ${{ steps.workflow-data.outputs.first_fail_step\
        \ }} \\n*Failure Module:* ${{ steps.workflow-data.outputs.first_fail_module\
        \ }}\"\n        }\n      },\n      {\n        \"type\": \"section\",\n   \
        \     \"text\": {\n          \"type\": \"mrkdwn\",\n          \"text\": \"\
        *Failure Message:* ${{ steps.workflow-data.outputs.first_fail_error }}\"\n\
        \        }\n      },\n      {\n        \"type\": \"divider\"\n      },\n \
        \     {\n        \"type\": \"section\",\n        \"text\": {\n          \"\
        type\": \"mrkdwn\",\n          \"text\": \"*${{ steps.workflow-data.outputs.report_type\
        \ }} Details:* \\nAuthor: ${{ steps.workflow-data.outputs.pr_author }} \\\
        nName: <${{ steps.workflow-data.outputs.pr_number_url || steps.workflow-data.outputs.branch_url\
        \ }} | ${{ steps.workflow-data.outputs.pr_title || steps.workflow-data.outputs.branch\
        \ }}> \\nNumber: #${{ steps.workflow-data.outputs.pr_number || steps.workflow-data.outputs.branch\
        \ }} \\nBranch: <${{ steps.workflow-data.outputs.branch_url }} | ${{ steps.workflow-data.outputs.branch\
        \ }}>\"\n        }\n      },\n      {\n        \"type\": \"divider\"\n   \
        \   },\n      {\n        \"type\": \"section\",\n        \"text\": {\n   \
        \       \"type\": \"mrkdwn\",\n          \"text\": \"*Commit Details:* \\\
        nID: <${{ steps.workflow-data.outputs.commit_id_url }} | #${{ steps.workflow-data.outputs.head_sha\
        \ }}> \\nAuthor: ${{ steps.workflow-data.outputs.head_author }} \\nName: ${{\
        \ steps.workflow-data.outputs.head_name }}\"\n        }\n      },\n      {\n\
        \        \"type\": \"divider\"\n      },\n      {\n        \"type\": \"header\"\
        ,\n        \"text\": {\n          \"type\": \"plain_text\",\n          \"\
        text\": \"\U0001F9EA Test Results = ${{ steps.workflow-data.outputs.test_conclusion\
        \ }}\",\n          \"emoji\": true\n        }\n      },\n      {\n       \
        \ \"type\": \"section\",\n        \"text\": {\n          \"type\": \"mrkdwn\"\
        ,\n          \"text\": \"*Passed:* ${{ steps.workflow-data.outputs.test_passed\
        \ }} \\n*Failed:* ${{ steps.workflow-data.outputs.test_failed }} \\n*Skipped:*\
        \ ${{ steps.workflow-data.outputs.test_skipped }} \\n*Elapsed Time:* ${{ steps.workflow-data.outputs.test_elapsed\
        \ }}\"\n        }\n      },\n      {\n        \"type\": \"section\",\n   \
        \     \"text\": {\n          \"type\": \"mrkdwn\",\n          \"text\": \"\
        \U0001F50D <${{ steps.workflow-data.outputs.test_results_url }} | View Test\
        \ Results>\"\n        }\n      }\n    ]\n}\nEOF\n)\necho \"payload=$(echo\
        \ $payload | jq -c .)\" >> $GITHUB_OUTPUT\necho \"payload=$payload\"\n"
    - continue-on-error: true
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: steps.workflow-data.outputs.has-json == 'true' && github.repository == 'dotcms/core'
      name: Post to Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ vars.SLACK_REPORT_CHANNEL }}
        payload: ${{ steps.prepare-slack-message.outputs.payload }}
name: CICD Reports
on:
  repository_dispatch:
    types: trigger-ga___build-report.yml
permissions:
  checks: write
run-name: Reports - ${{ github.event.workflow_run.name }}
